<mxfile host="Electron" modified="2024-05-11T06:16:23.116Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/24.2.5 Chrome/120.0.6099.109 Electron/28.1.0 Safari/537.36" etag="nJQyvqOOk67SjB60ulSd" version="24.2.5" type="device">
  <diagram name="Страница — 1" id="s4mWriT41Jr-JxMLOOjL">
    <mxGraphModel dx="712" dy="835" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="FIvrHqPwgJ9G6CmQn5tY-2" value="Tree" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="120" y="330" width="430" height="800" as="geometry" />
        </mxCell>
        <mxCell id="FIvrHqPwgJ9G6CmQn5tY-3" value="- left:&amp;nbsp;Tree&amp;lt;T&amp;gt;*&lt;div&gt;- right:&amp;nbsp;Tree&amp;lt;T&amp;gt;*&lt;/div&gt;&lt;div&gt;- parent:&amp;nbsp;Tree&amp;lt;T&amp;gt;*&lt;/div&gt;&lt;div&gt;- data: T&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FIvrHqPwgJ9G6CmQn5tY-2">
          <mxGeometry y="26" width="430" height="64" as="geometry" />
        </mxCell>
        <mxCell id="FIvrHqPwgJ9G6CmQn5tY-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="FIvrHqPwgJ9G6CmQn5tY-2">
          <mxGeometry y="90" width="430" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FIvrHqPwgJ9G6CmQn5tY-5" value="&lt;div&gt;+ Tree()&lt;/div&gt;&lt;div&gt;+ Tree(T)&lt;/div&gt;&lt;div&gt;+ ~Tree()&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+ get_data(): T&lt;/div&gt;&lt;div&gt;+  replace(T):&amp;nbsp;void&lt;/div&gt;&lt;div&gt;+  delete_left():&amp;nbsp;void&lt;/div&gt;&lt;div&gt;+  delete_right():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  insert_left(T):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  insert_right(T):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  view_direct():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  view_symmetric():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  view_reverse():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  copy_list(std::list&amp;lt;T&amp;gt;&amp;amp;):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  print_tree(int):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  delete_tree():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+  insert(T):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  erase(T):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  set_left(Tree&amp;lt;T&amp;gt;*):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  set_right(Tree&amp;lt;T&amp;gt;*):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;int getHeight():&lt;/div&gt;&lt;div&gt;int countNodes():&lt;/div&gt;&lt;div&gt;int obh(Tree&amp;lt;T&amp;gt;* node):&lt;/div&gt;&lt;div&gt;+  print_vert():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;void&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+  fillBlanks(int):&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+  eject_left():&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  eject_right():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  get_left():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  get_right():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  get_parent():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  copy():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  search_all(T):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  search_sort(T):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  next():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  prev():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  find_min():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  find_max():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  balanced(int):&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;+  in_order_traversal(std::vector&amp;lt;T&amp;gt;&amp;amp;): void&lt;/div&gt;&lt;div&gt;+  create_bst_from_balanced_tree():&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Tree&amp;lt;T&amp;gt;*&lt;/span&gt;&lt;/div&gt;&lt;div&gt;+  DrawT(): void&lt;/div&gt;&lt;div&gt;- DrawElement(Tree&amp;lt;T&amp;gt;*, int, int, int, int, int, RenderWindow&amp;amp;): void&lt;/div&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FIvrHqPwgJ9G6CmQn5tY-2">
          <mxGeometry y="98" width="430" height="702" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
